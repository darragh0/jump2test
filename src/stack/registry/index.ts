// Auto-generated by `scripts/gen-registry.ts` (DO NOT EDIT)
// Refer to `CONTRIBUTING.md` for adding a new stack

import { ALL_STACKS } from "@stack/registry/const";
import { trace } from "@common/logging";
import { StackId } from "@stack/types";
import { Stack } from "@stack/interface";

const stacks = new Map<StackId, Stack>();
let initialized = false;

function registerStack(stack: Stack): void {
  stacks.set(stack.id, stack);
  trace(`Registered stack with ID: "${stack.id}"`);
}

function getStack(id: StackId): Stack | undefined {
  if (!initialized) initializeStacks();
  return stacks.get(id);
}

function getAllStacks(): Stack[] {
  if (!initialized) initializeStacks();
  return Array.from(stacks.values());
}

function initializeStacks(): void {
  if (initialized) return;
  ALL_STACKS.forEach(registerStack);
  initialized = true;
}

export { getAllStacks, getStack, registerStack };
